// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pomodorii.Api;

#nullable disable

namespace Pomodorii.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Pomodorii.Models.Semi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("TomateId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TomateId");

                    b.ToTable("Semis");

                    b.HasData(
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2022, 7, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            TomateId = 1
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2022, 7, 16, 0, 0, 0, 0, DateTimeKind.Local),
                            TomateId = 2
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2022, 7, 14, 0, 0, 0, 0, DateTimeKind.Local),
                            TomateId = 2
                        });
                });

            modelBuilder.Entity("Pomodorii.Models.Tomate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("longtext");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Tomates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "très bon",
                            ImageUrl = "img/tomates/ALAMBRA.gif",
                            Nom = "Alambra"
                        },
                        new
                        {
                            Id = 2,
                            Description = "très bon",
                            ImageUrl = "img/tomates/Andine Cornue.gif",
                            Nom = "Andine Cornue"
                        },
                        new
                        {
                            Id = 3,
                            Description = "très bon",
                            ImageUrl = "img/tomates/COBRA.gif",
                            Nom = "Cobra"
                        },
                        new
                        {
                            Id = 4,
                            Description = "très bon",
                            ImageUrl = "img/tomates/coeur-de-boeuf.gif",
                            Nom = "Coeur-de-boeuf"
                        },
                        new
                        {
                            Id = 5,
                            Description = "très bon",
                            ImageUrl = "img/tomates/noire-de-crimee.gif",
                            Nom = "noire-de-crimee"
                        },
                        new
                        {
                            Id = 6,
                            Description = "très bon",
                            ImageUrl = "img/tomates/russe-rouge.gif",
                            Nom = "russe-rouge"
                        },
                        new
                        {
                            Id = 7,
                            Description = "très bon",
                            ImageUrl = "img/tomates/tomito-f1.gif",
                            Nom = "tomito-f1"
                        });
                });

            modelBuilder.Entity("Pomodorii.Models.Semi", b =>
                {
                    b.HasOne("Pomodorii.Models.Tomate", "Tomate")
                        .WithMany()
                        .HasForeignKey("TomateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Tomate");
                });
#pragma warning restore 612, 618
        }
    }
}
